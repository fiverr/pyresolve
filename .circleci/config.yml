version: 2.1
workflows:
  version: 2.1
  ci:
    jobs:
      - test:
          context: org-global
          matrix:
            parameters:
              image:
                - circleci/python:2-stretch
                - circleci/python:3-stretch
      - publish:
          context: org-global
          requires:
            - test
          filters:
            branches:
              only:
                - master
jobs:
  test:
    parameters:
      image:
        description: "docker image"
        default: "circleci/python:latest"
        type: string
    working_directory: ~/app
    docker:
      - image: <<parameters.image>>
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - run:
          name: Install test tools
          command: sudo pip install pytest pycodestyle
      - run:
          name: Run tests
          command: python -m pytest -vv -s
      - run:
          name: Check code style
          command: pycodestyle . --max-line-length=119 --exclude venv
  publish:
    working_directory: ~/app
    docker:
      - image: circleci/python:3-stretch
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - run:
          name: Check if publishing is needed
          command: |
            INSTALLED=$(cat setup.py | grep version | awk -F '"' '{print $2}')
            LATEST=$(curl -s "https://pypi.org/pypi/${CIRCLE_PROJECT_REPONAME}/json" | jq -r '.info.version')

            [ $INSTALLED = $LATEST ] && circleci-agent step halt
      - run:
          name: Install build tools
          command: sudo pip install setuptools wheel twine
      - run:
          name: build
          command: python setup.py sdist bdist_wheel
      - run:
          name: upload
          command: python -m twine upload -u $PYPI_USERNAME -p $PYPI_PASSWORD --skip-existing dist/*
